# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License").
# You may not use this file except in compliance with the License.
# A copy of the License is located at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# or in the "license" file accompanying this file. This file is distributed
# on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
# express or implied. See the License for the specific language governing
# permissions and limitations under the License.

name: 'EC2 Test'
# on:
#   schedule:
#     - cron: '0 * * * *' # triggers the workflow every hour

#   # we can manually trigger this workflow by using dispatch for debuging
#   repository_dispatch:
#     types: [ec2-test]
on:        
  workflow_dispatch:
    inputs:
      version:
        description: 'version number'
        required: true
      testcase:
        description: 'test case'
        required: false
        default: 'otlp_mock'
      image:
        description: 'AMI image'
        required: false
        default: 'amazonlinux2'

env:
  TF_VAR_aws_access_key_id: ${{ secrets.INTEG_TEST_AWS_KEY_ID }}
  TF_VAR_aws_secret_access_key: ${{ secrets.INTEG_TEST_AWS_KEY_SECRET }}

jobs:

  run-ec2-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.INTEG_TEST_AWS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.INTEG_TEST_AWS_KEY_SECRET }}
          aws-region: us-west-2

      - name: Set up JDK 1.11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11

      - name: Set up terraform
        uses: hashicorp/setup-terraform@v1

      - name: Check out testing framework
        uses: actions/checkout@v2
        with:
          # repository: '${{ github.repository_owner }}/aws-otel-test-framework'
          # ref: wip-ssm-1
          repository: 'aws-observability/aws-otel-test-framework'
          path: testing-framework

      - name: Run ec2 test
        run: |
          if [[ -f testing-framework/terraform/testcases/${{ github.event.inputs.testcase }}/parameters.tfvars ]] ; then opts="-var-file=../testcases/${{ github.event.inputs.testcase }}/parameters.tfvars" ; else opts="" ; fi
          cd testing-framework/terraform/ec2 && terraform init && terraform apply -auto-approve -lock=false $opts -var="aoc_version=${{ github.event.inputs.version }}" -var="testcase=../testcases/${{ github.event.inputs.testcase }}" -var="testing_ami=${{ github.event.inputs.image }}"

      - name: Destroy terraform resources
        if: ${{ always() }}
        run: |
          cd testing-framework/terraform/ec2 && terraform destroy -auto-approve
